<?xml version="1.0"?>
<launch>
  <arg name="gemweightspath" value="/home/xuzhl/catkin_ws_d/src/dslam_release/script/ROS_GEM/weights/gem.pth" />
  <arg name="datasetpath" value="/home/xuzhl/dataset/image_503_loop/pic/" />
  <arg name="robotid1" value="0" />
  <arg name="framestart1" value="1" />
  <arg name="frameend1" value="2874" />
  
  
  <node name="publish" pkg="dslam_sp" required="false" type="publish_merge" args="-p $(arg datasetpath) -i $(arg robotid1) -s $(arg framestart1) -e $(arg frameend1)"/>
  
  <node name="sp_ORB" pkg="dslam_sp" required="true" type="orb_EF" output="screen">
    <remap from="image" to="/merge/img_depth_file" />
  </node>

  
  <node name="vo" pkg="dslam_sp" required="true" type="visual_odometry_orb" output="screen">
    <remap from="feature" to="/orb_EF/featurepoints_descriptors" />
  </node>

    
  <node name="gen_tf" pkg="dslam_sp" required="true" type="generate_track_node.py" output="screen">
    <remap from="relpose" to="/visual_odometry/transform_relative_with_image" />
  </node>

  <node name="gem_extract" pkg="dslam_sp" required="true" type="extract_feature_ros.py"  args="-w $(arg gemweightspath)" output="screen" >
    <remap from="PRrepresentor" to="GEM_PRrepresentor" />
  </node>

  <node name="gem_receiver" pkg="dslam_sp" required="true" type="receiver_ros_multi.py"   args="-i $(arg robotid1)" output="screen">
    <remap from="PRrepresentor" to="GEM_PRrepresentor" />
    <remap from = "/robot$(arg robotid1)/loopfnames" to="/robot1/loopfnames" />
    <!-- <remap from="looppose" to="GEM_LOOPS" /> -->
  </node>

  <!-- <node name="fnames2pose" pkg="dslam_sp" required="true" type="vo_loop_fnames_orb"  args="-p $(arg datasetpath)" output="screen">
    <remap from="filenames" to="/loopfnames" />
    <remap from="VO_loop_relpose" to="/looppose" />
  </node> -->


  <node name="loop_str_frames" pkg="dslam_sp" required="true" type="string2frame.py" args="-p $(arg datasetpath) -i $(arg robotid1)" output="screen">
    <remap from="loopstring" to="/robot1/loopfnames" />
    <remap from="loopframe" to="/robot1/loopframe" />
  </node>

  <node name="loop_frames" pkg="dslam_sp" required="true" type="vo_loop_frames_orb" output="log">
  <remap from="loopframes" to="/robot1/loopframe" />
  <remap from="VO_loop_relpose" to="/looppose" />
  </node>

  <node name="pointcloud" pkg="dslam_sp" required="true" type="rgbd2pointcloud.py" output="screen">
    <remap from="/pose_with_image" to="/pose_with_image" />
  </node>

  <!-- <node name="tf_listerner" pkg="dslam_sp" required="true" type="py_tf_listerner.py" output="screen"/> -->

  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen">

    <!-- resolution in meters per pixel -->
    <param name="resolution" value="0.25" />

    <!-- name of the fixed frame, needs to be "/map" for SLAM -->
    <param name="frame_id" type="string" value="/map0" />

    <!-- max range / depth resolution of the kinect in meter -->
    <param name="sensor_model/max_range" value="100.0" />
    <param name="latch" value="true" />

    <!-- <param name="filter_ground" value="true" /> -->

    <!-- max/min height for occupancy map, should be in meters -->
    <param name="pointcloud_max_z" value="1000" />
    <param name="pointcloud_min_z" value="-1000" />

    <!-- topic from where pointcloud2 messages are subscribed -->
    <remap from="/cloud_in" to="/pointcloud_part_local" />
 
  </node>
  
<node name="rviz" pkg="rviz" required="true" type="rviz" output="screen"/>

</launch>
